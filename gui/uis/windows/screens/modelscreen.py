# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'modelscreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from qt_core import *

model_default_input = {
    "production": "",
    "mtschedule": "",
    "horizons": "",
    "ltplan": "",
    "pasa": "",
    "competition": "",
    "diagnostics": "",
    "transmission": "",
    "stschedule": "",
    "performance": "",
    "stochastics": "",
    "reports": "",
    "scenarios": {}
}

class Ui_ModelScreen(object):
    def setupUi(self, ModelScreen):
        ModelScreen.setObjectName("ModelScreen")
        ModelScreen.resize(859, 740)
        self.verticalLayout_2 = QVBoxLayout(ModelScreen)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.simulation_groupBox = QGroupBox(ModelScreen)
        self.simulation_groupBox.setObjectName("simulation_groupBox")
        self.gridLayout_2 = QGridLayout(self.simulation_groupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.production_comboBox = QComboBox(self.simulation_groupBox)
        self.production_comboBox.setObjectName("production_comboBox")
        self.gridLayout_2.addWidget(self.production_comboBox, 3, 1, 1, 1)
        self.mtschedule_comboBox = QComboBox(self.simulation_groupBox)
        self.mtschedule_comboBox.setObjectName("mtschedule_comboBox")
        self.gridLayout_2.addWidget(self.mtschedule_comboBox, 7, 1, 1, 1)
        self.horizons_comboBox = QComboBox(self.simulation_groupBox)
        self.horizons_comboBox.setObjectName("horizons_comboBox")
        self.gridLayout_2.addWidget(self.horizons_comboBox, 9, 1, 1, 1)
        self.ltplan_comboBox = QComboBox(self.simulation_groupBox)
        self.ltplan_comboBox.setObjectName("ltplan_comboBox")
        self.gridLayout_2.addWidget(self.ltplan_comboBox, 8, 1, 1, 1)
        self.stschedule_label = QLabel(self.simulation_groupBox)
        self.stschedule_label.setObjectName("stschedule_label")
        self.gridLayout_2.addWidget(self.stschedule_label, 6, 0, 1, 1)
        self.mtschedule_label = QLabel(self.simulation_groupBox)
        self.mtschedule_label.setObjectName("mtschedule_label")
        self.gridLayout_2.addWidget(self.mtschedule_label, 7, 0, 1, 1)
        self.pasa_comboBox = QComboBox(self.simulation_groupBox)
        self.pasa_comboBox.setObjectName("pasa_comboBox")
        self.gridLayout_2.addWidget(self.pasa_comboBox, 10, 1, 1, 1)
        self.competition_label = QLabel(self.simulation_groupBox)
        self.competition_label.setObjectName("competition_label")
        self.gridLayout_2.addWidget(self.competition_label, 0, 0, 1, 1)
        self.competition_comboBox = QComboBox(self.simulation_groupBox)
        self.competition_comboBox.setObjectName("competition_comboBox")
        self.gridLayout_2.addWidget(self.competition_comboBox, 0, 1, 1, 1)
        self.diagnostics_label = QLabel(self.simulation_groupBox)
        self.diagnostics_label.setObjectName("diagnostics_label")
        self.gridLayout_2.addWidget(self.diagnostics_label, 1, 0, 1, 1)
        self.stochastics_label = QLabel(self.simulation_groupBox)
        self.stochastics_label.setObjectName("stochastics_label")
        self.gridLayout_2.addWidget(self.stochastics_label, 4, 0, 1, 1)
        self.ltplan_label = QLabel(self.simulation_groupBox)
        self.ltplan_label.setObjectName("ltplan_label")
        self.gridLayout_2.addWidget(self.ltplan_label, 8, 0, 1, 1)
        self.transmission_label = QLabel(self.simulation_groupBox)
        self.transmission_label.setObjectName("transmission_label")
        self.gridLayout_2.addWidget(self.transmission_label, 5, 0, 1, 1)
        self.production_label = QLabel(self.simulation_groupBox)
        self.production_label.setObjectName("production_label")
        self.gridLayout_2.addWidget(self.production_label, 3, 0, 1, 1)
        self.performance_label = QLabel(self.simulation_groupBox)
        self.performance_label.setObjectName("performance_label")
        self.gridLayout_2.addWidget(self.performance_label, 2, 0, 1, 1)
        self.diagnostics_comboBox = QComboBox(self.simulation_groupBox)
        self.diagnostics_comboBox.setObjectName("diagnostics_comboBox")
        self.gridLayout_2.addWidget(self.diagnostics_comboBox, 1, 1, 1, 1)
        self.transmission_comboBox = QComboBox(self.simulation_groupBox)
        self.transmission_comboBox.setObjectName("transmission_comboBox")
        self.gridLayout_2.addWidget(self.transmission_comboBox, 5, 1, 1, 1)
        self.reports_label = QLabel(self.simulation_groupBox)
        self.reports_label.setObjectName("reports_label")
        self.gridLayout_2.addWidget(self.reports_label, 11, 0, 1, 1)
        self.stschedule_comboBox = QComboBox(self.simulation_groupBox)
        self.stschedule_comboBox.setObjectName("stschedule_comboBox")
        self.gridLayout_2.addWidget(self.stschedule_comboBox, 6, 1, 1, 1)
        self.performance_comboBox = QComboBox(self.simulation_groupBox)
        self.performance_comboBox.setObjectName("performance_comboBox")
        self.gridLayout_2.addWidget(self.performance_comboBox, 2, 1, 1, 1)
        self.pasa_label = QLabel(self.simulation_groupBox)
        self.pasa_label.setObjectName("pasa_label")
        self.gridLayout_2.addWidget(self.pasa_label, 10, 0, 1, 1)
        self.stochastics_comboBox = QComboBox(self.simulation_groupBox)
        self.stochastics_comboBox.setObjectName("stochastics_comboBox")
        self.gridLayout_2.addWidget(self.stochastics_comboBox, 4, 1, 1, 1)
        self.horizons_label = QLabel(self.simulation_groupBox)
        self.horizons_label.setObjectName("horizons_label")
        self.gridLayout_2.addWidget(self.horizons_label, 9, 0, 1, 1)
        self.reports_comboBox = QComboBox(self.simulation_groupBox)
        self.reports_comboBox.setObjectName("reports_comboBox")
        self.gridLayout_2.addWidget(self.reports_comboBox, 11, 1, 1, 1)
        self.gridLayout_2.setColumnMinimumWidth(0, 120)
        self.gridLayout_2.setColumnStretch(1, 1)
        self.verticalLayout_2.addWidget(self.simulation_groupBox)
        self.scenarios_groupBox = QGroupBox(ModelScreen)
        self.scenarios_groupBox.setObjectName("scenarios_groupBox")
        self.verticalLayout = QVBoxLayout(self.scenarios_groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.scenarios_tableWidget = QTableWidget(self.scenarios_groupBox)
        self.scenarios_tableWidget.setObjectName("scenarios_tableWidget")
        self.scenarios_tableWidget.setColumnCount(0)
        self.scenarios_tableWidget.setRowCount(0)
        self.verticalLayout.addWidget(self.scenarios_tableWidget)
        self.verticalLayout_2.addWidget(self.scenarios_groupBox)

        self.retranslateUi(ModelScreen)
        QMetaObject.connectSlotsByName(ModelScreen)

    def retranslateUi(self, ModelScreen):
        _translate = QCoreApplication.translate
        ModelScreen.setWindowTitle(_translate("ModelScreen", "Dialog"))
        self.simulation_groupBox.setTitle(_translate("ModelScreen", "Simulation"))
        self.stschedule_label.setText(_translate("ModelScreen", "ST Schedule"))
        self.mtschedule_label.setText(_translate("ModelScreen", "MT Schedule"))
        self.competition_label.setText(_translate("ModelScreen", "Competition"))
        self.diagnostics_label.setText(_translate("ModelScreen", "Diagnostics"))
        self.stochastics_label.setText(_translate("ModelScreen", "Stochastics"))
        self.ltplan_label.setText(_translate("ModelScreen", "LT Plan"))
        self.transmission_label.setText(_translate("ModelScreen", "Transmission"))
        self.production_label.setText(_translate("ModelScreen", "Production"))
        self.performance_label.setText(_translate("ModelScreen", "Performance"))
        self.reports_label.setText(_translate("ModelScreen", "Reports"))
        self.pasa_label.setText(_translate("ModelScreen", "PASA"))
        self.horizons_label.setText(_translate("ModelScreen", "Horizons"))
        self.scenarios_groupBox.setTitle(_translate("ModelScreen", "Scenarios"))

    def setOptions(self, options):
        # Merge default options with provided options
        options = {
            "production": [],
            "mtschedule": [],
            "horizons": [],
            "ltplan": [],
            "pasa": [],
            "competition": [],
            "diagnostics": [],
            "transmission": [],
            "stschedule": [],
            "performance": [],
            "stochastics": [],
            "reports": []
        } | options

        # Clear all combo boxes
        self.production_comboBox.clear()
        self.mtschedule_comboBox.clear()
        self.horizons_comboBox.clear()
        self.ltplan_comboBox.clear()
        self.pasa_comboBox.clear()
        self.competition_comboBox.clear()
        self.diagnostics_comboBox.clear()
        self.transmission_comboBox.clear()
        self.stschedule_comboBox.clear()
        self.performance_comboBox.clear()
        self.stochastics_comboBox.clear()
        self.reports_comboBox.clear()

        # Add empty (placeholder) item
        self.production_comboBox.addItem("")
        self.mtschedule_comboBox.addItem("")
        self.horizons_comboBox.addItem("")
        self.ltplan_comboBox.addItem("")
        self.pasa_comboBox.addItem("")
        self.competition_comboBox.addItem("")
        self.diagnostics_comboBox.addItem("")
        self.transmission_comboBox.addItem("")
        self.stschedule_comboBox.addItem("")
        self.performance_comboBox.addItem("")
        self.stochastics_comboBox.addItem("")
        self.reports_comboBox.addItem("")

        # Add all items
        self.production_comboBox.addItems(options["production"])
        self.mtschedule_comboBox.addItems(options["mtschedule"])
        self.horizons_comboBox.addItems(options["horizons"])
        self.ltplan_comboBox.addItems(options["ltplan"])
        self.pasa_comboBox.addItems(options["pasa"])
        self.competition_comboBox.addItems(options["competition"])
        self.diagnostics_comboBox.addItems(options["diagnostics"])
        self.transmission_comboBox.addItems(options["transmission"])
        self.stschedule_comboBox.addItems(options["stschedule"])
        self.performance_comboBox.addItems(options["performance"])
        self.stochastics_comboBox.addItems(options["stochastics"])
        self.reports_comboBox.addItems(options["reports"])

    def setScenarios(self, scenarios):
        self.scenarios_tableWidget.setColumnCount(3)
        self.scenarios_tableWidget.setHorizontalHeaderLabels(["Enabled?", "Scenario", "Priority"])
        self.scenarios_tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.scenarios_tableWidget.verticalHeader().hide()

        scenarios = list(set([scenario.upper() for scenario in scenarios]))
        self.scenarios_tableWidget.setRowCount(len(scenarios))
        for i in range(len(scenarios)):
            self.scenarios_tableWidget.setCellWidget(i, 0, QCheckBox())
            item = QTableWidgetItem(scenarios[i])
            item.setFlags(Qt.ItemIsSelectable|Qt.ItemIsEnabled)
            self.scenarios_tableWidget.setItem(i, 1, item)
            self.scenarios_tableWidget.setItem(i, 2, QTableWidgetItem("0"))

    def setInput(self, input):
        self.production_comboBox.setCurrentText(input["production"])
        self.mtschedule_comboBox.setCurrentText(input["mtschedule"])
        self.horizons_comboBox.setCurrentText(input["horizons"])
        self.ltplan_comboBox.setCurrentText(input["ltplan"])
        self.pasa_comboBox.setCurrentText(input["pasa"])
        self.competition_comboBox.setCurrentText(input["competition"])
        self.diagnostics_comboBox.setCurrentText(input["diagnostics"])
        self.transmission_comboBox.setCurrentText(input["transmission"])
        self.stschedule_comboBox.setCurrentText(input["stschedule"])
        self.performance_comboBox.setCurrentText(input["performance"])
        self.stochastics_comboBox.setCurrentText(input["stochastics"])
        self.reports_comboBox.setCurrentText(input["reports"])

        for name, value in input["scenarios"].items():
            found = False
            for i in range(self.scenarios_tableWidget.rowCount()):
                if name == self.scenarios_tableWidget.item(i, 1).text():
                    self.scenarios_tableWidget.cellWidget(i, 0).setChecked(value["enabled"])
                    self.scenarios_tableWidget.item(i, 2).setText(value["priority"])
                    found = True
                    continue
            if not found:
                i = self.scenarios_tableWidget.rowCount()
                self.scenarios_tableWidget.setRowCount(i + 1)
                checkbox = QCheckBox()
                checkbox.setChecked(value["enabled"])
                self.scenarios_tableWidget.setCellWidget(i, 0, checkbox)
                item = QTableWidgetItem(name)
                item.setFlags(Qt.ItemIsSelectable|Qt.ItemIsEnabled)
                self.scenarios_tableWidget.setItem(i, 1, item)
                self.scenarios_tableWidget.setItem(i, 2, QTableWidgetItem(value["priority"]))
    
    def getOutput(self):
        scenarios = {}
        for i in range(self.scenarios_tableWidget.rowCount()):
            enabled = self.scenarios_tableWidget.cellWidget(i, 0).isChecked()
            priority = self.scenarios_tableWidget.item(i, 2).text()
            if enabled or priority != "0":
                name = self.scenarios_tableWidget.item(i, 1).text()
                scenarios[name] = {
                    "enabled": enabled,
                    "priority": priority
                }

        output = {
            "production": self.production_comboBox.currentText(),
            "mtschedule": self.mtschedule_comboBox.currentText(),
            "horizons": self.horizons_comboBox.currentText(),
            "ltplan": self.ltplan_comboBox.currentText(),
            "pasa": self.pasa_comboBox.currentText(),
            "competition": self.competition_comboBox.currentText(),
            "diagnostics": self.diagnostics_comboBox.currentText(),
            "transmission": self.transmission_comboBox.currentText(),
            "stschedule": self.stschedule_comboBox.currentText(),
            "performance": self.performance_comboBox.currentText(),
            "stochastics": self.stochastics_comboBox.currentText(),
            "reports": self.reports_comboBox.currentText(),
            "scenarios": scenarios
        }
        return output
