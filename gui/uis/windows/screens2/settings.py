# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from qt_core import *


settings_default_input = {
    "Competition": "",
    "Diagnostics": "",
    "Performance": "",
    "Production": "",
    "Stochastics": "",
    "Transmission": "",
    "Feature Binning Properties": ""
}


class Ui_Settings(QObject):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Settings")
        Dialog.resize(900, 600)
        self.verticalLayout = QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.formLayout = QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.competitionLabel = QLabel(Dialog)
        self.competitionLabel.setObjectName("competitionLabel")
        self.formLayout.setWidget(0, QFormLayout.LabelRole, self.competitionLabel)
        self.competitionComboBox = QComboBox(Dialog)
        self.competitionComboBox.setObjectName("competitionComboBox")
        self.formLayout.setWidget(0, QFormLayout.FieldRole, self.competitionComboBox)
        self.diagnosticsLabel = QLabel(Dialog)
        self.diagnosticsLabel.setObjectName("diagnosticsLabel")
        self.formLayout.setWidget(1, QFormLayout.LabelRole, self.diagnosticsLabel)
        self.diagnosticsComboBox = QComboBox(Dialog)
        self.diagnosticsComboBox.setObjectName("diagnosticsComboBox")
        self.formLayout.setWidget(1, QFormLayout.FieldRole, self.diagnosticsComboBox)
        self.performanceLabel = QLabel(Dialog)
        self.performanceLabel.setObjectName("performanceLabel")
        self.formLayout.setWidget(2, QFormLayout.LabelRole, self.performanceLabel)
        self.performanceComboBox = QComboBox(Dialog)
        self.performanceComboBox.setObjectName("performanceComboBox")
        self.formLayout.setWidget(2, QFormLayout.FieldRole, self.performanceComboBox)
        self.productionLabel = QLabel(Dialog)
        self.productionLabel.setObjectName("productionLabel")
        self.formLayout.setWidget(3, QFormLayout.LabelRole, self.productionLabel)
        self.productionComboBox = QComboBox(Dialog)
        self.productionComboBox.setObjectName("productionComboBox")
        self.formLayout.setWidget(3, QFormLayout.FieldRole, self.productionComboBox)
        self.stochasticsLabel = QLabel(Dialog)
        self.stochasticsLabel.setObjectName("stochasticsLabel")
        self.formLayout.setWidget(4, QFormLayout.LabelRole, self.stochasticsLabel)
        self.stochasticsComboBox = QComboBox(Dialog)
        self.stochasticsComboBox.setObjectName("stochasticsComboBox")
        self.formLayout.setWidget(4, QFormLayout.FieldRole, self.stochasticsComboBox)
        self.transmissionLabel = QLabel(Dialog)
        self.transmissionLabel.setObjectName("transmissionLabel")
        self.formLayout.setWidget(5, QFormLayout.LabelRole, self.transmissionLabel)
        self.transmissionComboBox = QComboBox(Dialog)
        self.transmissionComboBox.setObjectName("transmissionComboBox")
        self.formLayout.setWidget(5, QFormLayout.FieldRole, self.transmissionComboBox)
        self.featureBinningLabel = QLabel(Dialog)
        self.featureBinningLabel.setObjectName("featureBinningLabel")
        self.formLayout.setWidget(6, QFormLayout.LabelRole, self.featureBinningLabel)
        self.featureBinningComboBox = QComboBox(Dialog)
        self.featureBinningComboBox.setObjectName("featureBinningComboBox")
        self.formLayout.setWidget(6, QFormLayout.FieldRole, self.featureBinningComboBox)
        self.verticalLayout.addLayout(self.formLayout)

        self.retranslateUi(Dialog)
        QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.competitionLabel.setText(_translate("Dialog", "Competition"))
        self.diagnosticsLabel.setText(_translate("Dialog", "Diagnostics"))
        self.performanceLabel.setText(_translate("Dialog", "Performance"))
        self.productionLabel.setText(_translate("Dialog", "Production"))
        self.stochasticsLabel.setText(_translate("Dialog", "Stochastics"))
        self.transmissionLabel.setText(_translate("Dialog", "Transmission"))
        self.featureBinningLabel.setText(_translate("Dialog", "Feature Binning Properties"))
    
    def setOptions(self, options):
        # Merge default options with provided options
        options = {
            "competition": [],
            "diagnostics": [],
            "performance": [],
            "production": [],
            "stochastics": [],
            "transmission": [],
            "featurebinningproperties": []
        } | options

        self.competitionComboBox.clear()
        self.diagnosticsComboBox.clear()
        self.performanceComboBox.clear()
        self.productionComboBox.clear()
        self.stochasticsComboBox.clear()
        self.transmissionComboBox.clear()
        self.featureBinningComboBox.clear()
        
        self.competitionComboBox.addItem("")
        self.diagnosticsComboBox.addItem("")
        self.performanceComboBox.addItem("")
        self.productionComboBox.addItem("")
        self.stochasticsComboBox.addItem("")
        self.transmissionComboBox.addItem("")
        self.featureBinningComboBox.addItem("")
        
        self.competitionComboBox.addItems(options["competition"])
        self.diagnosticsComboBox.addItems(options["diagnostics"])
        self.performanceComboBox.addItems(options["performance"])
        self.productionComboBox.addItems(options["production"])
        self.stochasticsComboBox.addItems(options["stochastics"])
        self.transmissionComboBox.addItems(options["transmission"])
        self.featureBinningComboBox.addItems(options["featurebinningproperties"])

    def setInput(self, input):
        self.input = input
        self.competitionComboBox.setCurrentText(self.input["Competition"])
        self.diagnosticsComboBox.setCurrentText(self.input["Diagnostics"])
        self.performanceComboBox.setCurrentText(self.input["Performance"])
        self.productionComboBox.setCurrentText(self.input["Production"])
        self.stochasticsComboBox.setCurrentText(self.input["Stochastics"])
        self.transmissionComboBox.setCurrentText(self.input["Transmission"])
        self.featureBinningComboBox.setCurrentText(self.input["Feature Binning Properties"])
    
    def getOutput(self):
        output = {
            "Competition": self.competitionComboBox.currentText(),
            "Diagnostics": self.diagnosticsComboBox.currentText(),
            "Performance": self.performanceComboBox.currentText(),
            "Production": self.productionComboBox.currentText(),
            "Stochastics": self.stochasticsComboBox.currentText(),
            "Transmission": self.transmissionComboBox.currentText(),
            "Feature Binning Properties": self.featureBinningComboBox.currentText()
        }
        return output