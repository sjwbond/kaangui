# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'execution_plans.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from functools import partial
from gui.core.functions import Functions
from gui.uis.custom.constants import execution_priorities
from qt_core import *


execution_plans_default_input = {
    "Settings": "",
    "Simulation": {
        "Horizons": "",
        "LRMC Model": "",
        "MT Schedule": "",
        "PASA": "",
        "Reports": "",
        "ST Schedule": "",
        "Scenarios": {}
    }
}


class Ui_ExecutionPlans(QObject):
    executed = Signal(int)

    def setupUi(self, Dialog):
        Dialog.setObjectName("Execution Plan")
        Dialog.resize(900, 600)
        self.verticalLayout = QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.formLayout = QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.settingsLabel = QLabel(Dialog)
        self.settingsLabel.setObjectName("settingsLabel")
        self.formLayout.setWidget(0, QFormLayout.LabelRole, self.settingsLabel)
        self.settingsComboBox = QComboBox(Dialog)
        self.settingsComboBox.setObjectName("settingsComboBox")
        self.formLayout.setWidget(0, QFormLayout.FieldRole, self.settingsComboBox)
        self.verticalLayout.addLayout(self.formLayout)
        self.groupBox = QGroupBox(Dialog)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_2 = QVBoxLayout(self.groupBox)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.formLayout_2 = QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.horizonsLabel = QLabel(self.groupBox)
        self.horizonsLabel.setObjectName("horizonsLabel")
        self.formLayout_2.setWidget(0, QFormLayout.LabelRole, self.horizonsLabel)
        self.horizonsComboBox = QComboBox(self.groupBox)
        self.horizonsComboBox.setObjectName("horizonsComboBox")
        self.formLayout_2.setWidget(0, QFormLayout.FieldRole, self.horizonsComboBox)
        self.lrmcModelLabel = QLabel(self.groupBox)
        self.lrmcModelLabel.setObjectName("lrmcModelLabel")
        self.formLayout_2.setWidget(1, QFormLayout.LabelRole, self.lrmcModelLabel)
        self.lrmcModelComboBox = QComboBox(self.groupBox)
        self.lrmcModelComboBox.setObjectName("lrmcModelComboBox")
        self.formLayout_2.setWidget(1, QFormLayout.FieldRole, self.lrmcModelComboBox)
        self.mtScheduleLabel = QLabel(self.groupBox)
        self.mtScheduleLabel.setObjectName("mtScheduleLabel")
        self.formLayout_2.setWidget(2, QFormLayout.LabelRole, self.mtScheduleLabel)
        self.mtScheduleComboBox = QComboBox(self.groupBox)
        self.mtScheduleComboBox.setObjectName("mtScheduleComboBox")
        self.formLayout_2.setWidget(2, QFormLayout.FieldRole, self.mtScheduleComboBox)
        self.pasaLabel = QLabel(self.groupBox)
        self.pasaLabel.setObjectName("pasaLabel")
        self.formLayout_2.setWidget(3, QFormLayout.LabelRole, self.pasaLabel)
        self.pasaComboBox = QComboBox(self.groupBox)
        self.pasaComboBox.setObjectName("pasaComboBox")
        self.formLayout_2.setWidget(3, QFormLayout.FieldRole, self.pasaComboBox)
        self.reportsLabel = QLabel(self.groupBox)
        self.reportsLabel.setObjectName("reportsLabel")
        self.formLayout_2.setWidget(4, QFormLayout.LabelRole, self.reportsLabel)
        self.reportsComboBox = QComboBox(self.groupBox)
        self.reportsComboBox.setObjectName("reportsComboBox")
        self.formLayout_2.setWidget(4, QFormLayout.FieldRole, self.reportsComboBox)
        self.stScheduleLabel = QLabel(self.groupBox)
        self.stScheduleLabel.setObjectName("stScheduleLabel")
        self.formLayout_2.setWidget(5, QFormLayout.LabelRole, self.stScheduleLabel)
        self.stScheduleComboBox = QComboBox(self.groupBox)
        self.stScheduleComboBox.setObjectName("stScheduleComboBox")
        self.formLayout_2.setWidget(5, QFormLayout.FieldRole, self.stScheduleComboBox)
        self.verticalLayout_2.addLayout(self.formLayout_2)
        self.verticalLayout.addWidget(self.groupBox)
        self.groupBox_2 = QGroupBox(Dialog)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_3 = QVBoxLayout(self.groupBox_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.scenariosTableWidget = QTableWidget(self.groupBox_2)
        self.scenariosTableWidget.setObjectName("scenariosTableWidget")
        self.scenariosTableWidget.setColumnCount(0)
        self.scenariosTableWidget.setRowCount(0)
        self.verticalLayout_3.addWidget(self.scenariosTableWidget)
        self.verticalLayout.addWidget(self.groupBox_2)
        self.verticalLayout.setStretch(2, 1)
        
        self.execute_button = QPushButton()
        self.execute_button.setText("Execute")
        self.execute_button.setCursor(Qt.PointingHandCursor)
        self.execute_button_icon = QIcon(Functions.set_svg_icon("icon_signal.svg"))
        self.execute_button.setIcon(self.execute_button_icon)
        self.execute_button.clicked.connect(self.executePressed)
        self.verticalLayout.addWidget(self.execute_button)

        self.retranslateUi(Dialog)
        QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.settingsLabel.setText(_translate("Dialog", "Settings"))
        self.groupBox.setTitle(_translate("Dialog", "Simulation"))
        self.horizonsLabel.setText(_translate("Dialog", "Horizons"))
        self.lrmcModelLabel.setText(_translate("Dialog", "LRMC Model"))
        self.mtScheduleLabel.setText(_translate("Dialog", "MT Schedule"))
        self.pasaLabel.setText(_translate("Dialog", "PASA"))
        self.reportsLabel.setText(_translate("Dialog", "Reports"))
        self.stScheduleLabel.setText(_translate("Dialog", "ST Schedule"))
        self.groupBox_2.setTitle(_translate("Dialog", "Scenarios"))
    
    def setOptions(self, options):
        # Merge default options with provided options
        options = {
            "settings": [],
            "horizons": [],
            "lrmcmodels": [],
            "mtschedule": [],
            "pasa": [],
            "reports": [],
            "stschedule": []
        } | options

        self.settingsComboBox.clear()
        self.horizonsComboBox.clear()
        self.lrmcModelComboBox.clear()
        self.mtScheduleComboBox.clear()
        self.pasaComboBox.clear()
        self.reportsComboBox.clear()
        self.stScheduleComboBox.clear()
        
        self.settingsComboBox.addItem("")
        self.horizonsComboBox.addItem("")
        self.lrmcModelComboBox.addItem("")
        self.mtScheduleComboBox.addItem("")
        self.pasaComboBox.addItem("")
        self.reportsComboBox.addItem("")
        self.stScheduleComboBox.addItem("")
        
        self.settingsComboBox.addItems(options["settings"])
        self.horizonsComboBox.addItems(options["horizons"])
        self.lrmcModelComboBox.addItems(options["lrmcmodels"])
        self.mtScheduleComboBox.addItems(options["mtschedule"])
        self.pasaComboBox.addItems(options["pasa"])
        self.reportsComboBox.addItems(options["reports"])
        self.stScheduleComboBox.addItems(options["stschedule"])

    def setScenarios(self, scenarios):
        self.scenariosTableWidget.setColumnCount(3)
        self.scenariosTableWidget.setHorizontalHeaderLabels(["Enabled?", "Scenario", "Priority"])
        self.scenariosTableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.scenariosTableWidget.verticalHeader().hide()

        scenarios = list(set([scenario.upper() for scenario in scenarios]))
        self.scenariosTableWidget.setRowCount(len(scenarios))
        for i in range(len(scenarios)):
            self.scenariosTableWidget.setCellWidget(i, 0, QCheckBox())
            item = QTableWidgetItem(scenarios[i])
            item.setFlags(Qt.ItemIsSelectable|Qt.ItemIsEnabled)
            self.scenariosTableWidget.setItem(i, 1, item)
            self.scenariosTableWidget.setItem(i, 2, QTableWidgetItem("0"))

    def setInput(self, input):
        self.input = input
        self.settingsComboBox.setCurrentText(self.input["Settings"])
        self.horizonsComboBox.setCurrentText(self.input["Simulation"]["Horizons"])
        self.lrmcModelComboBox.setCurrentText(self.input["Simulation"]["LRMC Model"])
        self.mtScheduleComboBox.setCurrentText(self.input["Simulation"]["MT Schedule"])
        self.pasaComboBox.setCurrentText(self.input["Simulation"]["PASA"])
        self.reportsComboBox.setCurrentText(self.input["Simulation"]["Reports"])
        self.stScheduleComboBox.setCurrentText(self.input["Simulation"]["ST Schedule"])

        for name, value in input["Simulation"]["Scenarios"].items():
            found = False
            for i in range(self.scenariosTableWidget.rowCount()):
                if name == self.scenariosTableWidget.item(i, 1).text():
                    self.scenariosTableWidget.cellWidget(i, 0).setChecked(True)
                    self.scenariosTableWidget.item(i, 2).setText(str(value))
                    found = True
                    continue
            if not found:
                i = self.scenariosTableWidget.rowCount()
                self.scenariosTableWidget.setRowCount(i + 1)
                checkbox = QCheckBox()
                checkbox.setChecked(True)
                self.scenariosTableWidget.setCellWidget(i, 0, checkbox)
                item = QTableWidgetItem(name)
                item.setFlags(Qt.ItemIsSelectable|Qt.ItemIsEnabled)
                self.scenariosTableWidget.setItem(i, 1, item)
                self.scenariosTableWidget.setItem(i, 2, QTableWidgetItem(str(value)))
    
    def getOutput(self):
        scenarios = {}
        for i in range(self.scenariosTableWidget.rowCount()):
            enabled = self.scenariosTableWidget.cellWidget(i, 0).isChecked()
            priority = self.scenariosTableWidget.item(i, 2).text()
            if enabled:
                name = self.scenariosTableWidget.item(i, 1).text()
                scenarios[name] = int(priority)

        output = {
            "Settings": self.settingsComboBox.currentText(),
            "Simulation": {
                "Horizons": self.horizonsComboBox.currentText(),
                "LRMC Model": self.lrmcModelComboBox.currentText(),
                "MT Schedule": self.mtScheduleComboBox.currentText(),
                "PASA": self.pasaComboBox.currentText(),
                "Reports": self.reportsComboBox.currentText(),
                "ST Schedule": self.stScheduleComboBox.currentText(),
                "Scenarios": scenarios
            }
        }
        return output

    def executePressed(self):
        menu = QMenu()

        menuitems = []
        for (label, priority) in execution_priorities:
            menuitem = QAction(f"{label} Priority")
            menuitem.triggered.connect(partial(self.executeModel, priority))
            menuitems.append(menuitem)
            menu.addAction(menuitem)

        cursor = QCursor()
        menu.exec_(cursor.pos())

    def executeModel(self, priority):
        self.executed.emit(priority)